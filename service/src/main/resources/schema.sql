CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(254) NOT NULL UNIQUE,
    name  VARCHAR(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    CONSTRAINT unique_location UNIQUE (lat, lon)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    annotation         VARCHAR(2000)               NOT NULL,
    category_id        BIGINT REFERENCES categories (id) ON DELETE CASCADE,
    confirmed_requests INT                                  DEFAULT 0,
    created_on         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description        VARCHAR(7000)               NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id       BIGINT REFERENCES users (id) ON DELETE CASCADE,
    location_id        BIGINT REFERENCES locations (id) ON DELETE CASCADE,
    paid               BOOLEAN                     NOT NULL DEFAULT FALSE,
    participant_limit  INT                                  DEFAULT 0,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN                     NOT NULL DEFAULT TRUE,
    state              VARCHAR(20)                 NOT NULL CHECK (state IN ('PENDING', 'PUBLISHED', 'CANCELED')),
    title              VARCHAR(120)                NOT NULL,
    views              BIGINT                               DEFAULT 0
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    pinned BOOLEAN     NOT NULL DEFAULT FALSE,
    title  VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT REFERENCES compilations (id) ON DELETE CASCADE,
    event_id       BIGINT REFERENCES events (id) ON DELETE CASCADE,
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id     BIGINT REFERENCES events (id) ON DELETE CASCADE,
    requester_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    status       VARCHAR(20)                 NOT NULL CHECK (status IN ('PENDING', 'CONFIRMED', 'REJECTED', 'CANCELED')),
    CONSTRAINT unique_request UNIQUE (event_id, requester_id)
);


CREATE INDEX IF NOT EXISTS idx_event_category_date ON events (category_id, event_date);

CREATE INDEX IF NOT EXISTS idx_compilation_pinned ON compilations (pinned);

CREATE INDEX IF NOT EXISTS idx_event_views ON events (views);