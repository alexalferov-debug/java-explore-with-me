{"collection":{"info":{"_postman_id":"5b1491d0-0aeb-4c09-8c5a-f1c81836cc80","name":"\"Explore with me\" комментарии","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","updatedAt":"2025-04-23T11:47:48.000Z","createdAt":"2025-04-19T06:21:07.000Z","lastUpdatedBy":"22114021","uid":"22114021-5b1491d0-0aeb-4c09-8c5a-f1c81836cc80"},"item":[{"name":"VALIDATE","item":[{"name":"Добавление комментария","item":[{"name":"Длина Добавленного комментария менее 10 символов","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let comment;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        comment = rnd.getComment(5);\r","        comment.content = rnd.getWord(5001);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        pm.collectionVariables.set(\"uid\",user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set('response', event)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(comment),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 400\", function () {\r","    pm.response.to.have.status(400);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"e5e42ce8-bba0-44cb-9853-48fe15f90d16","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:eventId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":eventId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"eventId","value":"{{eid}}"}]}},"response":[],"uid":"22114021-e5e42ce8-bba0-44cb-9853-48fe15f90d16"},{"name":"Длина Добавленного комментария более 5 тысяч символов","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let comment;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        comment = rnd.getComment(5);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        pm.collectionVariables.set(\"uid\",user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set('response', event)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(comment),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 400\", function () {\r","    pm.response.to.have.status(400);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"b24b7a92-8eee-4752-b014-90016cab04e1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:eventId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":eventId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"eventId","value":"{{eid}}"}]}},"response":[],"uid":"22114021-b24b7a92-8eee-4752-b014-90016cab04e1"},{"name":"Добавление комментария к неопубликованному событию","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let comment;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        comment = rnd.getComment(50);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        pm.collectionVariables.set(\"uid\",user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set('response', event)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(comment),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 409\", function () {\r","    pm.response.to.have.status(409);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"c6ac0275-b383-4f02-812e-51796c6af0e4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:eventId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":eventId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"eventId","value":"{{eid}}"}]}},"response":[],"uid":"22114021-c6ac0275-b383-4f02-812e-51796c6af0e4"},{"name":"Добавление комментария к несуществующему событию","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let comment;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        comment = rnd.getComment(50);\r","        pm.collectionVariables.set(\"uid\",user.id)\r","        pm.collectionVariables.set(\"eid\", 9999999)\r","        pm.collectionVariables.set('response', event)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(comment),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 404\", function () {\r","    pm.response.to.have.status(404);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"7f340bb4-1746-42a7-bbb4-2a74e5a0b878","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:eventId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":eventId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"eventId","value":"{{eid}}"}]}},"response":[],"uid":"22114021-7f340bb4-1746-42a7-bbb4-2a74e5a0b878"}],"id":"17d3323a-3f07-493b-be44-1aead400dee5","uid":"22114021-17d3323a-3f07-493b-be44-1aead400dee5"},{"name":"Получение информации о комментарии","item":[{"name":"Получение информации о несуществующем комментарии","event":[{"listen":"prerequest","script":{"id":"50852315-5696-48d7-ae02-b963f401cedf","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","\r","    try {\r","        pm.collectionVariables.set(\"cid\", 89999999)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"334431a2-9129-4546-80d4-03cb394dd436","exec":["pm.test(\"Status code is 404\", function () {\r","    pm.response.to.have.status(404);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"5e7bd281-2fa7-446d-a997-893b4003a5a9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/comment/:id","host":["{{baseUrl}}"],"path":["comment",":id"],"variable":[{"key":"id","value":"{{cid}}"}]}},"response":[],"uid":"22114021-5e7bd281-2fa7-446d-a997-893b4003a5a9"}],"id":"9b1b066f-f22e-435b-94ba-95fe56da857c","uid":"22114021-9b1b066f-f22e-435b-94ba-95fe56da857c"},{"name":"Удаление комментария пользователем","item":[{"name":"Удаление несуществующего комментария","event":[{"listen":"prerequest","script":{"id":"50852315-5696-48d7-ae02-b963f401cedf","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","\r","    try {\r","        pm.collectionVariables.set(\"cid\", 89999999)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"334431a2-9129-4546-80d4-03cb394dd436","exec":["pm.test(\"Status code is 404\", function () {\r","    pm.response.to.have.status(404);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"66042803-7603-4379-96a6-a19bc421b2eb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseUrl}}/users/:userId/comments/:id","host":["{{baseUrl}}"],"path":["users",":userId","comments",":id"],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"id","value":"{{cid}}"}]}},"response":[],"uid":"22114021-66042803-7603-4379-96a6-a19bc421b2eb"},{"name":"Удаление комментария другим пользователем","event":[{"listen":"prerequest","script":{"id":"50852315-5696-48d7-ae02-b963f401cedf","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const anotherUser = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        let comment = await api.addComment(user.id, event.id, rnd.getComment(50));\r","        console.info(comment);\r","        pm.collectionVariables.set(\"uid\", anotherUser.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set(\"comment\", comment.content)\r","        pm.collectionVariables.set('response', comment);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"334431a2-9129-4546-80d4-03cb394dd436","exec":["pm.test(\"Status code is 409\", function () {\r","    pm.response.to.have.status(409);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"9a912ca1-5027-4473-9952-f721151d822d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseUrl}}/users/:userId/comments/:id","host":["{{baseUrl}}"],"path":["users",":userId","comments",":id"],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"id","value":"{{cid}}"}]}},"response":[],"uid":"22114021-9a912ca1-5027-4473-9952-f721151d822d"},{"name":"Удаление удаленного комментария","event":[{"listen":"prerequest","script":{"id":"50852315-5696-48d7-ae02-b963f401cedf","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        let comment = await api.addComment(user.id, event.id, rnd.getComment(50));\r","        await api.deleteComment(comment.id,user.id);\r","        console.info(comment);\r","        pm.collectionVariables.set(\"uid\", user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set(\"comment\", comment.content)\r","        pm.collectionVariables.set('response', comment);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"334431a2-9129-4546-80d4-03cb394dd436","exec":["pm.test(\"Status code is 404\", function () {\r","    pm.response.to.have.status(404);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"a3e7d86c-0889-403d-a5fe-67596050cdb8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseUrl}}/users/:userId/comments/:id","host":["{{baseUrl}}"],"path":["users",":userId","comments",":id"],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"id","value":"{{cid}}"}]}},"response":[],"uid":"22114021-a3e7d86c-0889-403d-a5fe-67596050cdb8"}],"id":"87b8f607-effd-4193-8dff-90997e47a6bd","uid":"22114021-87b8f607-effd-4193-8dff-90997e47a6bd"},{"name":"Изменение комментария","item":[{"name":"Изменение комментария, добавленного другим пользователем.","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const anotherUser = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","\r","        // Создаем комментарий\r","        const commentContent = rnd.getComment(50); // Генерируем содержимое комментария\r","        const comment = await api.addComment(user.id, event.id, commentContent);\r","        const anotherContent = rnd.getComment(100);\r","\r","        // Сохраняем переменные в коллекции\r","        pm.collectionVariables.set(\"uid\", anotherUser.id);\r","        pm.collectionVariables.set(\"eid\", event.id);\r","        pm.collectionVariables.set('response', comment);\r","        pm.collectionVariables.set(\"cid\", comment.id);\r","        pm.collectionVariables.set(\"comment\", anotherContent.content);\r","\r","        // Обновляем тело запроса\r","pm.request.body.update({\r","    mode: 'raw',\r","    raw: JSON.stringify({ content: anotherContent.content }), // Используем только content\r","    options: { raw: { language: 'json' } }\r","});\r","    } catch (err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => {\r","    try {\r","        await main();\r","    } catch (e) {\r","        console.error(e);\r","    } finally {\r","        clearInterval(interval);\r","    }\r","}, 100);"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 409\", function () {\r","    pm.response.to.have.status(409);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('status');\r","    pm.expect(response).to.have.property('reason');\r","    pm.expect(response).to.have.property('message');\r","    pm.expect(response).to.have.property('timestamp');\r","    pm.expect(response).to.have.property('errors');\r","});"],"type":"text/javascript","packages":{}}}],"id":"669f17d7-344f-42e1-a516-5fe05518f482","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:commentId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":commentId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"commentId","value":"{{cid}}"}]}},"response":[],"uid":"22114021-669f17d7-344f-42e1-a516-5fe05518f482"}],"id":"786d6052-7639-497c-af48-8e3c571903e1","uid":"22114021-786d6052-7639-497c-af48-8e3c571903e1"},{"name":"Добавление жалобы на комментарий","item":[{"name":"Отправляем жалобу на удаленный комментарий","event":[{"listen":"prerequest","script":{"id":"29866bec-8585-4b29-8418-8136d61ce6ac","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let reaportReasons;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const reporter = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        const commentContent = rnd.getComment(50);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);        \r","        const comment = await api.addComment(user.id, event.id, commentContent);\r","        await api.deleteComment(comment.id,user.id);\r","        pm.collectionVariables.set(\"uid\",reporter.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set('response', comment)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(rnd.getReport(1)),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"4682939d-1318-4144-8b72-65389c80b5d7","exec":["pm.test(\"Status code is 404\", function () {\r","    pm.response.to.have.status(404);\r","});"],"type":"text/javascript","packages":{}}}],"id":"61f7e495-5d1c-4e8e-8fad-65720fe784d5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"reasonId\": 1,\r\n    \"description\":\"sopd'jvfklsf;afjsdlk;jdfklaj;sfkl;ajfoiqe4tjnfvjknKXDKv\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:commentId/report","host":["{{baseUrl}}"],"path":["users",":userId","comments",":commentId","report"],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"commentId","value":"{{cid}}"}]}},"response":[],"uid":"22114021-61f7e495-5d1c-4e8e-8fad-65720fe784d5"}],"id":"73261807-d358-4f81-a77d-c3729b43d349","uid":"22114021-73261807-d358-4f81-a77d-c3729b43d349"}],"id":"5f584c42-2b6e-4d92-8205-27dbf7b8bc3f","uid":"22114021-5f584c42-2b6e-4d92-8205-27dbf7b8bc3f"},{"name":"Получение информации о комментарии","event":[{"listen":"prerequest","script":{"id":"50852315-5696-48d7-ae02-b963f401cedf","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        let comment = await api.addComment(user.id, event.id, rnd.getComment(50));\r","        pm.collectionVariables.set(\"uid\", user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set(\"comment\", comment.content)\r","        pm.collectionVariables.set('response', comment);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"334431a2-9129-4546-80d4-03cb394dd436","exec":["pm.test(\"Status code is 201\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('id');\r","    pm.expect(response).to.have.property('eventId');\r","    pm.expect(response).to.have.property('author');\r","    pm.expect(response).to.have.property('content');\r","    pm.expect(response).to.have.property('hasReplies');\r","});\r","\r","pm.test(\"Data types are correct\", function () {\r","    pm.expect(response.id).to.be.a('number');\r","    pm.expect(response.eventId).to.be.a('number');\r","    pm.expect(response.author).to.be.an('object');\r","    pm.expect(response.content).to.be.a('string');\r","    pm.expect(response.hasReplies).to.be.a('boolean');\r","});\r","\r","pm.test(\"Author structure is valid\", function () {\r","    pm.expect(response.author).to.have.property('id').that.is.a('number');\r","    pm.expect(response.author).to.have.property('name').that.is.a('string');\r","});\r","\r","pm.test(\"Event ID matches created event\", function () {\r","    const eventId = pm.collectionVariables.get('eid');\r","    pm.expect(response.eventId).to.eql(parseInt(eventId));\r","});\r","\r","pm.test(\"Author ID matches created user\", function () {\r","    const userId = pm.collectionVariables.get('uid');\r","    pm.expect(response.author.id).to.eql(parseInt(userId));\r","});\r","\r","pm.test(\"Content matches sent data\", function () {\r","    pm.expect(response.content).to.eql(pm.collectionVariables.get('comment'));\r","});\r",""],"type":"text/javascript","packages":{}}}],"id":"17fd37ad-c995-4355-86f5-f7e3f3cf1396","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/comment/:id","host":["{{baseUrl}}"],"path":["comment",":id"],"variable":[{"key":"id","value":"{{cid}}"}]}},"response":[],"uid":"22114021-17fd37ad-c995-4355-86f5-f7e3f3cf1396"},{"name":"Получение списка комментариев, добавленных к событию","event":[{"listen":"prerequest","script":{"id":"50852315-5696-48d7-ae02-b963f401cedf","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const user1 = await api.addUser(rnd.getUser());\r","        const user2 = await api.addUser(rnd.getUser());\r","        const user3 = await api.addUser(rnd.getUser());\r","        const user4 = await api.addUser(rnd.getUser());\r","        const user5 = await api.addUser(rnd.getUser());\r","        const user6 = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","\r","        const comments = [];\r","        for (let i = 0; i < 11; i++) {\r","            const userId = [user1, user2, user3, user4, user5, user6][i % 6].id; // Циклически выбираем пользователей\r","            const comment = await api.addComment(userId, event.id, rnd.getComment(50));\r","            comments.push(comment);\r","        }\r","        const reversedComments = comments.slice(1, 11).reverse();\r","\r","        pm.collectionVariables.set(\"comments\", JSON.stringify(reversedComments.slice(0, 10)));\r","\r","        pm.collectionVariables.set(\"uid\", user.id);\r","        pm.collectionVariables.set(\"eid\", event.id);\r","    } catch (err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => {\r","    try {\r","        await main();\r","    } catch (e) {\r","        console.error(e);\r","    } finally {\r","        clearInterval(interval);\r","    }\r","}, 100);"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"334431a2-9129-4546-80d4-03cb394dd436","exec":["const savedComments = JSON.parse(pm.collectionVariables.get(\"comments\"));\r","const eventId = parseInt(pm.collectionVariables.get(\"eid\"));\r","\r","pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response contains 10 comments\", function () {\r","    const response = pm.response.json();\r","    pm.expect(response).to.be.an('array').with.lengthOf(10);\r","});\r","\r","pm.test(\"Each comment has correct structure\", function () {\r","    const response = pm.response.json();\r","    response.forEach((comment, index) => {\r","        pm.expect(comment).to.have.property('id');\r","        pm.expect(comment).to.have.property('eventId');\r","        pm.expect(comment).to.have.property('author');\r","        pm.expect(comment).to.have.property('content');\r","        pm.expect(comment).to.have.property('hasReplies');\r","\r","        pm.expect(comment.id).to.be.a('number');\r","        pm.expect(comment.eventId).to.be.a('number');\r","        pm.expect(comment.author).to.be.an('object');\r","        pm.expect(comment.content).to.be.a('string');\r","        pm.expect(comment.hasReplies).to.be.a('boolean');\r","\r","        pm.expect(comment.author).to.have.property('id').that.is.a('number');\r","        pm.expect(comment.author).to.have.property('name').that.is.a('string');\r","\r","        pm.expect(comment.eventId).to.eql(eventId);\r","\r","        pm.expect(comment.content).to.eql(savedComments[index].content);\r","    });\r","});"],"type":"text/javascript","packages":{}}}],"id":"1e1e481e-1eae-4c97-8f82-d52474bf5117","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/events/:eventId/comments","host":["{{baseUrl}}"],"path":["events",":eventId","comments"],"variable":[{"key":"eventId","value":"{{eid}}"}]}},"response":[],"uid":"22114021-1e1e481e-1eae-4c97-8f82-d52474bf5117"},{"name":"Удаление комментария пользователем","event":[{"listen":"prerequest","script":{"id":"50852315-5696-48d7-ae02-b963f401cedf","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        let comment = await api.addComment(user.id, event.id, rnd.getComment(50));\r","        console.info(comment);\r","        pm.collectionVariables.set(\"uid\", user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set(\"comment\", comment.content)\r","        pm.collectionVariables.set('response', comment);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"334431a2-9129-4546-80d4-03cb394dd436","exec":["pm.test(\"Status code is 204\", function () {\r","    pm.response.to.have.status(204);\r","});\r","\r","pm.test(\"Response body is empty\", function () {\r","    pm.expect(pm.response.text()).to.be.empty;\r","});\r",""],"type":"text/javascript","packages":{}}}],"id":"14b9f244-1187-42e0-81a0-f7bb5b7c9b56","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseUrl}}/users/:userId/comments/:commentId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":commentId"],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"commentId","value":"{{cid}}"}]}},"response":[],"uid":"22114021-14b9f244-1187-42e0-81a0-f7bb5b7c9b56"},{"name":"Добавление комментария","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let comment;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        comment = rnd.getComment(50);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        pm.collectionVariables.set(\"uid\",user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set('response', comment)\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(comment),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 201\", function () {\r","    pm.response.to.have.status(201);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('id');\r","    pm.expect(response).to.have.property('eventId');\r","    pm.expect(response).to.have.property('author');\r","    pm.expect(response).to.have.property('content');\r","    pm.expect(response).to.have.property('hasReplies');\r","});\r","\r","pm.test(\"Data types are correct\", function () {\r","    pm.expect(response.id).to.be.a('number');\r","    pm.expect(response.eventId).to.be.a('number');\r","    pm.expect(response.author).to.be.an('object');\r","    pm.expect(response.content).to.be.a('string');\r","    pm.expect(response.hasReplies).to.be.a('boolean');\r","});\r","\r","pm.test(\"Author structure is valid\", function () {\r","    pm.expect(response.author).to.have.property('id').that.is.a('number');\r","    pm.expect(response.author).to.have.property('name').that.is.a('string');\r","});\r","\r","pm.test(\"Event ID matches created event\", function () {\r","    const eventId = pm.collectionVariables.get('eid');\r","    pm.expect(response.eventId).to.eql(parseInt(eventId));\r","});\r","\r","pm.test(\"Author ID matches created user\", function () {\r","    const userId = pm.collectionVariables.get('uid');\r","    pm.expect(response.author.id).to.eql(parseInt(userId));\r","});\r","\r","pm.test(\"Content matches sent data\", function () {\r","    const requestBody = JSON.parse(pm.request.body.raw);\r","    pm.expect(response.content).to.eql(requestBody.content);\r","});\r","\r","pm.test(\"hasReplies is false for new comment\", function () {\r","    pm.expect(response.hasReplies).to.be.false;\r","});"],"type":"text/javascript","packages":{}}}],"id":"4fb4b080-42e4-436a-9ddd-fd051718f72f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:eventId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":eventId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"eventId","value":"{{eid}}"}]}},"response":[],"uid":"22114021-4fb4b080-42e4-436a-9ddd-fd051718f72f"},{"name":"Добавление ответа на комментарий","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let commentForReply;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const userForReply = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        comment = rnd.getComment(50);\r","        commentForReply = rnd.getComment(150);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        let createdComment = await api.addComment(user.id, event.id,comment);\r","        pm.collectionVariables.set(\"uid\",user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set(\"cid\", createdComment.id)\r","        pm.collectionVariables.set('response', commentForReply);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(commentForReply),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 201\", function () {\r","    pm.response.to.have.status(201);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('id');\r","    pm.expect(response).to.have.property('eventId');\r","    pm.expect(response).to.have.property('author');\r","    pm.expect(response).to.have.property('content');\r","    pm.expect(response).to.have.property('hasReplies');\r","});\r","\r","pm.test(\"Data types are correct\", function () {\r","    pm.expect(response.id).to.be.a('number');\r","    pm.expect(response.eventId).to.be.a('number');\r","    pm.expect(response.author).to.be.an('object');\r","    pm.expect(response.content).to.be.a('string');\r","    pm.expect(response.hasReplies).to.be.a('boolean');\r","});\r","\r","pm.test(\"Author structure is valid\", function () {\r","    pm.expect(response.author).to.have.property('id').that.is.a('number');\r","    pm.expect(response.author).to.have.property('name').that.is.a('string');\r","});\r","\r","pm.test(\"Event ID matches created event\", function () {\r","    const eventId = pm.collectionVariables.get('eid');\r","    pm.expect(response.eventId).to.eql(parseInt(eventId));\r","});\r","\r","pm.test(\"Author ID matches created user\", function () {\r","    const userId = pm.collectionVariables.get('uid');\r","    pm.expect(response.author.id).to.eql(parseInt(userId));\r","});\r","\r","pm.test(\"Content matches sent data\", function () {\r","    const requestBody = JSON.parse(pm.request.body.raw);\r","    pm.expect(response.content).to.eql(requestBody.content);\r","});\r","\r","pm.test(\"hasReplies is false for new comment\", function () {\r","    pm.expect(response.hasReplies).to.be.false;\r","});"],"type":"text/javascript","packages":{}}}],"id":"52ccc86c-631f-4f6a-bd76-fa2552562b66","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/reply/:commentId","host":["{{baseUrl}}"],"path":["users",":userId","comments","reply",":commentId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"commentId","value":"{{cid}}"}]}},"response":[],"uid":"22114021-52ccc86c-631f-4f6a-bd76-fa2552562b66"},{"name":"Получение списка ответов на комментарий","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let commentForReply;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const user2 = await api.addUser(rnd.getUser());\r","        const user3 = await api.addUser(rnd.getUser());\r","        const user4 = await api.addUser(rnd.getUser());\r","        const user5 = await api.addUser(rnd.getUser());\r","        const userForReply = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        comment = rnd.getComment(50);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        let createdComment = await api.addComment(user.id, event.id,comment);\r","        let reply1 = await api.addReply(user2.id,createdComment.id,rnd.getComment(150))\r","        let reply2 = await api.addReply(user3.id,createdComment.id,rnd.getComment(150))\r","        let reply3 = await api.addReply(user4.id,reply2.id,rnd.getComment(150))\r","        let reply4 = await api.addReply(user5.id,createdComment.id,rnd.getComment(150))\r","        let reply5 = await api.addReply(user2.id,createdComment.id,rnd.getComment(150))\r","        let reply6 = await api.addReply(user3.id,reply3.id,rnd.getComment(150)); \r","        const comments = [];       \r","        comments.push(reply5);        \r","        comments.push(reply4);        \r","        comments.push(reply2);        \r","        comments.push(reply1);\r","        pm.collectionVariables.set(\"uid\",user.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set(\"cid\", createdComment.id)\r","        pm.collectionVariables.set(\"comments\", JSON.stringify(comments));\r","        pm.collectionVariables.set('response', commentForReply);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(commentForReply),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["const savedComments = JSON.parse(pm.collectionVariables.get(\"comments\"));\r","const eventId = parseInt(pm.collectionVariables.get(\"eid\"));\r","\r","pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response contains 4 comments\", function () {\r","    const response = pm.response.json();\r","    pm.expect(response).to.be.an('array').with.lengthOf(4);\r","});\r","\r","pm.test(\"Each comment has correct structure\", function () {\r","    const response = pm.response.json();\r","    response.forEach((comment, index) => {\r","        pm.expect(comment).to.have.property('id');\r","        pm.expect(comment).to.have.property('eventId');\r","        pm.expect(comment).to.have.property('author');\r","        pm.expect(comment).to.have.property('content');\r","        pm.expect(comment).to.have.property('hasReplies');\r","\r","        pm.expect(comment.id).to.be.a('number');\r","        pm.expect(comment.eventId).to.be.a('number');\r","        pm.expect(comment.author).to.be.an('object');\r","        pm.expect(comment.content).to.be.a('string');\r","        pm.expect(comment.hasReplies).to.be.a('boolean');\r","\r","        pm.expect(comment.author).to.have.property('id').that.is.a('number');\r","        pm.expect(comment.author).to.have.property('name').that.is.a('string');\r","\r","        pm.expect(comment.eventId).to.eql(eventId);\r","\r","        pm.expect(comment.content).to.eql(savedComments[index].content);\r","    });\r","});"],"type":"text/javascript","packages":{}}}],"id":"1758937c-2f7c-44fe-ad27-498f38a8a180","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/comment/:commentId/reply","host":["{{baseUrl}}"],"path":["comment",":commentId","reply"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"commentId","value":"{{cid}}"}]}},"response":[],"uid":"22114021-1758937c-2f7c-44fe-ad27-498f38a8a180"},{"name":"Изменение комментария","event":[{"listen":"prerequest","script":{"id":"c60d6ef2-0aaf-472d-a161-e435057550fb","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","\r","        // Создаем комментарий\r","        const commentContent = rnd.getComment(50); // Генерируем содержимое комментария\r","        const comment = await api.addComment(user.id, event.id, commentContent);\r","        const anotherContent = rnd.getComment(100);\r","\r","        // Сохраняем переменные в коллекции\r","        pm.collectionVariables.set(\"uid\", user.id);\r","        pm.collectionVariables.set(\"eid\", event.id);\r","        pm.collectionVariables.set('response', comment);\r","        pm.collectionVariables.set(\"cid\", comment.id);\r","        pm.collectionVariables.set(\"comment\", anotherContent.content);\r","\r","        // Обновляем тело запроса\r","pm.request.body.update({\r","    mode: 'raw',\r","    raw: JSON.stringify({ content: anotherContent.content }), // Используем только content\r","    options: { raw: { language: 'json' } }\r","});\r","    } catch (err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => {\r","    try {\r","        await main();\r","    } catch (e) {\r","        console.error(e);\r","    } finally {\r","        clearInterval(interval);\r","    }\r","}, 100);"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"eae12f9c-1f4b-44fc-96e2-5cecfac7e856","exec":["pm.test(\"Status code is 201\", function () {\r","    pm.response.to.have.status(201);\r","});\r","\r","const response = pm.response.json();\r","\r","pm.test(\"Response has correct structure\", function () {\r","    pm.expect(response).to.have.property('id');\r","    pm.expect(response).to.have.property('eventId');\r","    pm.expect(response).to.have.property('author');\r","    pm.expect(response).to.have.property('content');\r","    pm.expect(response).to.have.property('hasReplies');\r","});\r","\r","pm.test(\"Data types are correct\", function () {\r","    pm.expect(response.id).to.be.a('number');\r","    pm.expect(response.eventId).to.be.a('number');\r","    pm.expect(response.author).to.be.an('object');\r","    pm.expect(response.content).to.be.a('string');\r","    pm.expect(response.hasReplies).to.be.a('boolean');\r","});\r","\r","pm.test(\"Author structure is valid\", function () {\r","    pm.expect(response.author).to.have.property('id').that.is.a('number');\r","    pm.expect(response.author).to.have.property('name').that.is.a('string');\r","});\r","\r","pm.test(\"Event ID matches created event\", function () {\r","    const eventId = pm.collectionVariables.get('eid');\r","    pm.expect(response.eventId).to.eql(parseInt(eventId));\r","});\r","\r","pm.test(\"Author ID matches created user\", function () {\r","    const userId = pm.collectionVariables.get('uid');\r","    pm.expect(response.author.id).to.eql(parseInt(userId));\r","});\r","\r","pm.test(\"Content matches sent data\", function () {\r","    const requestBody = JSON.parse(pm.request.body.raw);\r","    pm.expect(response.content).to.eql(requestBody.content);\r","});\r","\r","pm.test(\"hasReplies is false for new comment\", function () {\r","    pm.expect(response.hasReplies).to.be.false;\r","});"],"type":"text/javascript","packages":{}}}],"id":"1870f062-bc24-43e6-aa1f-3feff43493d7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{{request_body}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:commentId","host":["{{baseUrl}}"],"path":["users",":userId","comments",":commentId"],"query":[{"key":"","value":"","type":"text","disabled":true},{"key":"","value":null,"type":"text","disabled":true}],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"commentId","value":"{{cid}}"}]}},"response":[],"uid":"22114021-1870f062-bc24-43e6-aa1f-3feff43493d7"},{"name":"Получение списка комментариев пользователя","event":[{"listen":"prerequest","script":{"id":"0e0dede2-d7ad-4c91-9879-1a7d18c215ec","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let commentForReply;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const user2 = await api.addUser(rnd.getUser());\r","        const user3 = await api.addUser(rnd.getUser());\r","        const user4 = await api.addUser(rnd.getUser());\r","        const user5 = await api.addUser(rnd.getUser());\r","        const userForReply = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        comment = rnd.getComment(50);\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);\r","        let createdComment = await api.addComment(user.id, event.id,comment);\r","        let reply1 = await api.addReply(user2.id,createdComment.id,rnd.getComment(150))\r","        let reply2 = await api.addReply(user3.id,createdComment.id,rnd.getComment(150))\r","        let reply3 = await api.addReply(user4.id,reply2.id,rnd.getComment(150))\r","        let reply4 = await api.addReply(user5.id,createdComment.id,rnd.getComment(150))\r","        let reply5 = await api.addReply(user2.id,createdComment.id,rnd.getComment(150))\r","        let reply6 = await api.addReply(user3.id,reply3.id,rnd.getComment(150)); \r","        const comments = [];       \r","        comments.push(reply5);        \r","        comments.push(reply4);        \r","        comments.push(reply2);        \r","        comments.push(reply1);\r","        pm.collectionVariables.set(\"uid\",user2.id)\r","        pm.collectionVariables.set(\"eid\", event.id)\r","        pm.collectionVariables.set(\"cid\", createdComment.id)\r","        pm.collectionVariables.set(\"comments\", JSON.stringify(comments));\r","        pm.collectionVariables.set('response', commentForReply);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(commentForReply),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"e7a221f9-c233-489e-b7ba-1ccad1e1228c","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is an array\", function () {\r","    const response = pm.response.json();\r","    pm.expect(response).to.be.an('array').that.is.not.empty;\r","});\r","\r","pm.test(\"Check comment structure and data\", function () {\r","    const response = pm.response.json();\r","    const eid = pm.collectionVariables.get(\"eid\");\r","    const uid = pm.collectionVariables.get(\"uid\");\r","    const cid = pm.collectionVariables.get(\"cid\");\r","\r","    response.forEach(comment => {\r","        pm.expect(comment).to.have.property('id').that.is.a('number');\r","        pm.expect(comment).to.have.property('content').that.is.a('string');\r","        pm.expect(comment).to.have.property('createdAt').that.matches(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+/);\r","        pm.expect(comment).to.have.property('hasReplies').that.is.a('boolean');\r","        \r","        pm.expect(comment.author).to.have.property('id').that.equals(parseInt(uid));\r","        pm.expect(comment.author).to.have.property('name').that.is.a('string');\r","        \r","        pm.expect(comment.event).to.have.property('id').that.equals(parseInt(eid));\r","        pm.expect(comment.event).to.have.property('title').that.is.a('string');\r","        pm.expect(comment.event.category).to.have.property('id').that.is.a('number');\r","        pm.expect(comment.event.initiator).to.have.property('id').that.is.a('number');\r","        pm.expect(comment.event).to.have.property('paid').that.is.a('boolean');\r","        \r","        if (comment.parent) {\r","            pm.expect(comment.parent).to.have.property('id').that.equals(parseInt(cid));\r","            pm.expect(comment.parent.author).to.have.property('id').that.is.a('number');\r","            pm.expect(comment.parent).to.have.property('content').that.is.a('string');\r","        }\r","    });\r","});\r","\r","pm.test(\"Check event data consistency\", function () {\r","    const response = pm.response.json();\r","    const firstEvent = response[0].event;\r","    \r","    response.forEach(comment => {\r","        pm.expect(comment.event.id).to.equal(firstEvent.id, \"All comments should belong to the same event\");\r","        pm.expect(comment.event.title).to.equal(firstEvent.title, \"Event titles should match\");\r","        pm.expect(comment.event.category.id).to.equal(firstEvent.category.id, \"Category IDs should match\");\r","    });\r","});"],"type":"text/javascript","packages":{}}}],"id":"639db1e5-7bb9-4133-830b-658ca3946b2e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/users/:userId/comments","host":["{{baseUrl}}"],"path":["users",":userId","comments"],"variable":[{"key":"userId","value":"{{uid}}"}]}},"response":[],"uid":"22114021-639db1e5-7bb9-4133-830b-658ca3946b2e"},{"name":"Список комментариев для администратора","event":[{"listen":"test","script":{"id":"45a75ff7-4e52-4ed1-9edb-f44ecb05d789","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript","packages":{}}}],"id":"addd88d9-ef75-4b9d-84cb-6f7f38b2694d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/admin/comments","host":["{{baseUrl}}"],"path":["admin","comments"],"query":[{"key":"userIds","value":"6","disabled":true},{"key":"eventIds","value":"5","type":"text","disabled":true},{"key":"eventIds","value":"2","type":"text","disabled":true},{"key":"createdFrom","value":"2022-01-06%2013%3A30%3A38","disabled":true},{"key":"createdTo","value":"2026-01-06%2013%3A30%3A38","disabled":true},{"key":"isDeleted","value":"true","type":"text","disabled":true},{"key":"hasReplies","value":"true","type":"text","disabled":true},{"key":"content","value":"Quia%20at","disabled":true},{"key":"from","value":"10","disabled":true},{"key":"size","value":"50","disabled":true}]}},"response":[],"uid":"22114021-addd88d9-ef75-4b9d-84cb-6f7f38b2694d"},{"name":"Отправляем жалобу на комментарий","event":[{"listen":"prerequest","script":{"id":"29866bec-8585-4b29-8418-8136d61ce6ac","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let reportReasons;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const reporter = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        const commentContent = rnd.getComment(50);\r","        reportReasons = await api.getReportReasons();\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);        \r","        const comment = await api.addComment(user.id, event.id, commentContent);\r","        pm.collectionVariables.set(\"uid\",reporter.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set('response', comment)\r","        console.info(reportReasons);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(rnd.getReport(reportReasons[Math.floor(Math.random() * reportReasons.length)].id)),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"4682939d-1318-4144-8b72-65389c80b5d7","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript","packages":{}}}],"id":"9e75a45c-0283-4420-a4f8-6fbc1070ae0e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"reason\": \"GRAPHIC_VIOLENCE\",\r\n    \"description\":\"sopd'jvfklsf;afjsdlk;jdfklaj;sfkl;ajfoiqe4tjnfvjknKXDKv\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/users/:userId/comments/:commentId/report","host":["{{baseUrl}}"],"path":["users",":userId","comments",":commentId","report"],"variable":[{"key":"userId","value":"{{uid}}"},{"key":"commentId","value":"{{cid}}"}]}},"response":[],"uid":"22114021-9e75a45c-0283-4420-a4f8-6fbc1070ae0e"},{"name":"Добавляем заметку к жалобе","event":[{"listen":"prerequest","script":{"id":"29866bec-8585-4b29-8418-8136d61ce6ac","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let reportReasons;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const reporter = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        const commentContent = rnd.getComment(50);\r","        reportReasons = await api.getReportReasons();\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);        \r","        const comment = await api.addComment(user.id, event.id, commentContent);\r","        const reportBody = rnd.getReport(1);\r","        const report = await api.addReport(reporter.id,comment.id,reportBody)\r","        pm.collectionVariables.set(\"uid\",reporter.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set(\"rid\", report.id)\r","        pm.collectionVariables.set('response', comment)\r","        console.info(reportReasons);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(rnd.getNote()),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"4682939d-1318-4144-8b72-65389c80b5d7","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript","packages":{}}}],"id":"43aa6566-7e5e-4e3a-979f-e9b0cb5b37c1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\r\n    \"reason\": \"GRAPHIC_VIOLENCE\",\r\n    \"description\":\"sopd'jvfklsf;afjsdlk;jdfklaj;sfkl;ajfoiqe4tjnfvjknKXDKv\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/admin/comments/report/:reportId/note","host":["{{baseUrl}}"],"path":["admin","comments","report",":reportId","note"],"variable":[{"key":"reportId","value":"{{rid}}"}]}},"response":[],"uid":"22114021-43aa6566-7e5e-4e3a-979f-e9b0cb5b37c1"},{"name":"Помечаем жалобу как решенную","event":[{"listen":"prerequest","script":{"id":"29866bec-8585-4b29-8418-8136d61ce6ac","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let reportReasons;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const reporter = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        const commentContent = rnd.getComment(50);\r","        reportReasons = await api.getReportReasons();\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);        \r","        const comment = await api.addComment(user.id, event.id, commentContent);\r","        const reportBody = rnd.getReport(1);\r","        const report = await api.addReport(reporter.id,comment.id,reportBody)\r","        pm.collectionVariables.set(\"uid\",reporter.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set(\"rid\", report.id)\r","        pm.collectionVariables.set('response', comment)\r","        console.info(reportReasons);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(rnd.getNote()),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"4682939d-1318-4144-8b72-65389c80b5d7","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript","packages":{}}}],"id":"60301971-3a4e-4f38-b948-8bc86f34f650","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\r\n    \"reason\": \"GRAPHIC_VIOLENCE\",\r\n    \"description\":\"sopd'jvfklsf;afjsdlk;jdfklaj;sfkl;ajfoiqe4tjnfvjknKXDKv\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/admin/comments/report/:reportId/resolve?newState=RESOLVED","host":["{{baseUrl}}"],"path":["admin","comments","report",":reportId","resolve"],"query":[{"key":"newState","value":"RESOLVED"}],"variable":[{"key":"reportId","value":"{{rid}}"}]}},"response":[],"uid":"22114021-60301971-3a4e-4f38-b948-8bc86f34f650"},{"name":"Получение списка жалоб для администратора","event":[{"listen":"prerequest","script":{"id":"29866bec-8585-4b29-8418-8136d61ce6ac","exec":["const main = async () => {\r","    const api = new API(pm);\r","    const rnd = new RandomUtils();\r","    let reportReasons;\r","    try {\r","        const user = await api.addUser(rnd.getUser());\r","        const reporter = await api.addUser(rnd.getUser());\r","        const category = await api.addCategory(rnd.getCategory());\r","        const commentContent = rnd.getComment(50);\r","        reportReasons = await api.getReportReasons();\r","        let event = await api.addEvent(user.id, rnd.getEvent(category.id));\r","        event = await api.publishEvent(event.id);        \r","        const comment = await api.addComment(user.id, event.id, commentContent);\r","        const reportBody = rnd.getReport(1);\r","        const report = await api.addReport(reporter.id,comment.id,reportBody)\r","        pm.collectionVariables.set(\"uid\",reporter.id)\r","        pm.collectionVariables.set(\"cid\", comment.id)\r","        pm.collectionVariables.set(\"rid\", report.id)\r","        pm.collectionVariables.set('response', comment)\r","        console.info(reportReasons);\r","    } catch(err) {\r","        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r","    }\r","        pm.request.body.update({\r","        mode: 'raw',\r","        raw: JSON.stringify(rnd.getNote()),\r","        options: { raw: { language: 'json' } }\r","    });\r","};\r","\r","const interval = setInterval(() => {}, 1000);\r","\r","setTimeout(async () => \r","    {\r","        try {\r","            // выполняем наш скрипт\r","            await main();\r","        } catch (e) {\r","            console.error(e);\r","        } finally {\r","            clearInterval(interval);\r","        }\r","    },  \r","    100 \r",");"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"4682939d-1318-4144-8b72-65389c80b5d7","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript","packages":{}}}],"id":"6ee0cfdf-5cb1-4e5d-b166-8bd3d575a30b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"body":{"mode":"raw","raw":"{\r\n    \"reason\": \"GRAPHIC_VIOLENCE\",\r\n    \"description\":\"sopd'jvfklsf;afjsdlk;jdfklaj;sfkl;ajfoiqe4tjnfvjknKXDKv\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/admin/comments/reports","host":["{{baseUrl}}"],"path":["admin","comments","reports"],"query":[{"key":"state","value":"RESOLVED","disabled":true},{"key":"state","value":"PENDING","disabled":true},{"key":"state","value":"REJECTED","type":"text","disabled":true},{"key":"reporterId","value":"60","disabled":true},{"key":"commenterId","value":"59","disabled":true},{"key":"commentsId","value":"55","type":"text","disabled":true},{"key":"reason","value":"1","type":"text","disabled":true},{"key":"createdFrom","value":"2022-01-06%2013%3A30%3A38","type":"text","disabled":true},{"key":"createdTo","value":"2025-10-06%2013%3A30%3A38","type":"text","disabled":true},{"key":"from","value":"1","type":"text","disabled":true},{"key":"size","value":"500","type":"text","disabled":true}]}},"response":[],"uid":"22114021-6ee0cfdf-5cb1-4e5d-b166-8bd3d575a30b"},{"name":"Получение списка причин обращения","event":[{"listen":"test","script":{"id":"6a4c35a0-427a-4e06-955d-d49a27dc47f4","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript","packages":{}}}],"id":"0030f6c2-a5c2-45d2-ad8c-93ccfc4a1ec1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/comment/reportReason","host":["{{baseUrl}}"],"path":["comment","reportReason"]}},"response":[],"uid":"22114021-0030f6c2-a5c2-45d2-ad8c-93ccfc4a1ec1"}],"event":[{"listen":"prerequest","script":{"id":"3e43351c-347f-467a-9013-21c5ff6db05d","type":"text/javascript","packages":{},"exec":["API = class {\r","    constructor(postman, verbose = false, baseUrl = \"http://localhost:8080\") {\r","        this.baseUrl = baseUrl;\r","        this.pm = postman;\r","        this._verbose = verbose;\r","    }\r","\r","    async addUser(user, verbose=null) {\r","        return this.post(\"/admin/users\", user, \"Ошибка при добавлении нового пользователя: \", verbose);\r","    }\r","\r","    async addCategory(category, verbose=null) {\r","        return this.post(\"/admin/categories\", category, \"Ошибка при добавлении новой категории: \", verbose);\r","    }\r","\r","    async addEvent(userId, event, verbose=null) {\r","        return this.post(\"/users/\" + userId + \"/events\", event, \"Ошибка при добавлении нового события: \", verbose);\r","    }\r","\r","    async addCompilation(compilation, verbose=null) {\r","        return this.post(\"/admin/compilations\", compilation, \"Ошибка при добавлении новой подборки: \", verbose);\r","    }\r","\r","    async addComment(userId, eventId, comment, verbose = null) {\r","        return this.post(\"/users/\"+userId+\"/comments/\"+eventId, comment, \"Ошибка при дообавлении комментария: \", verbose);\r","    }\r","\r","    async addReport(userId, commentId, report, verbose = null) {\r","        return this.post(\"/users/\"+userId+\"/comments/\"+commentId+\"/report\", report, \"Ошибка при дообавлении комментария: \", verbose);\r","    }\r","\r","    async addReply(userId, commentId, comment, verbose = null) {\r","        return this.post(\"/users/\"+userId+\"/comments/reply/\"+commentId, comment, \"Ошибка при дообавлении комментария: \", verbose);\r","    }\r","\r","    async publishParticipationRequest(eventId, userId, verbose=null) {\r","        return this.post('/users/' + userId + '/requests?eventId=' + eventId, null, \"Ошибка при добавлении нового запроса на участие в событии\", verbose);\r","    }\r","\r","    async deleteComment(commentId,userId, verbose = null){\r","        return this.delete(\"/users/\" + userId + \"/comments/\" + commentId,null,\"Ошибка при удалении комментария\", verbose)\r","    }\r","\r","    async publishEvent(eventId, verbose=null) {\r","        return this.patch('/admin/events/' + eventId, {stateAction: \"PUBLISH_EVENT\"}, \"Ошибка при публикации события\", verbose);\r","    }\r","    \r","    async rejectEvent(eventId, verbose=null) {\r","        return this.patch('/admin/events/' + eventId, {stateAction: \"REJECT_EVENT\"}, \"Ошибка при отмене события\", verbose);\r","    }\r","\r","    async acceptParticipationRequest(eventId, userId, reqId, verbose=null) {\r","        return this.patch('/users/' + userId + '/events/' + eventId + '/requests', {requestIds:[reqId], status: \"CONFIRMED\"}, \"Ошибка при принятии заявки на участие в событии\", verbose);\r","    }\r","\r","    async findCategory(catId, verbose=null) {\r","        return this.get('/categories/' + catId, null, \"Ошибка при поиске категории по id\", verbose);\r","    }\r","\r","    async findCompilation(compId, verbose=null) {\r","        return this.get('/compilations/' + compId, null, \"Ошибка при поиске подборки по id\", verbose);\r","    }\r","\r","    async getReportReasons(verbose=null) {\r","        return this.get('/comment/reportReason', null, \"Ошибка при поиске причин обращения\", verbose);\r","    }\r","\r","\r","    async findEvent(eventId, verbose=null) {\r","        return this.get('/events/' + eventId, null, \"Ошибка при поиске события по id\", verbose);\r","    }\r","\r","    async findUser(userId, verbose=null) {\r","        return this.get('/admin/users?ids=' + userId, null, \"Ошибка при поиске пользователя по id\", verbose);\r","    }\r","\r","    async post(path, body, errorText = \"Ошибка при выполнении post-запроса: \", verbose=null) {\r","        return this.sendRequest(\"POST\", path, body, errorText, verbose);\r","    }\r","\r","    async delete(path, body = null, errorText = \"Ошибка при выполнении delete-запроса: \", verbose=null) {\r","        return this.sendRequest(\"DELETE\", path, body, errorText, verbose);\r","    }\r","\r","    async patch(path, body = null, errorText = \"Ошибка при выполнении patch-запроса: \", verbose=null) {\r","        return this.sendRequest(\"PATCH\", path, body, errorText, verbose);\r","    }\r","\r","    async get(path, body = null, errorText = \"Ошибка при выполнении get-запроса: \", verbose=null) {\r","        return this.sendRequest(\"GET\", path, body, errorText, verbose);\r","    }\r","    async sendRequest(method, path, body=null, errorText = \"Ошибка при выполнении запроса: \", verbose=null) {\r","        return new Promise((resolve, reject) => {\r","            verbose = verbose == null ? this._verbose : verbose;\r","            const request = {\r","                url: this.baseUrl + path,\r","                method: method,\r","                body: body == null ? \"\" : JSON.stringify(body),\r","                header: { \"Content-Type\": \"application/json\" },\r","            };\r","            if(verbose) {\r","                console.log(\"Отправляю запрос: \", request);\r","            }\r","\r","            try {\r","                this.pm.sendRequest(request, (error, response) => {\r","                    if(error || (response.code >= 400 && response.code <= 599)) {\r","                        let err = error ? error : JSON.stringify(response.json());\r","                        console.error(\"При выполнении запроса к серверу возникла ошика.\\n\", err,\r","                             \"\\nДля отладки проблемы повторите такой же запрос к вашей программе \" + \r","                             \"на локальном компьютере. Данные запроса:\\n\", JSON.stringify(request));\r","\r","                        reject(new Error(errorText + err));\r","                    }\r","                    if(verbose) {\r","                        console.log(\"Результат обработки запроса: код состояния - \", response.code, \", тело: \", response.json());\r","                    }\r","                    if (response.stream.length === 0){\r","                       console.warn ('получено пустое тело ответа');\r","                       resolve(null);\r","                    }else{\r","                        resolve(response.json());\r","                    }\r","                });\r","                \r","            } catch(err) {\r","                if(verbose) {\r","                    console.error(errorText, err);\r","                }\r","                return Promise.reject(err);\r","            }\r","        });\r","    }\r","};\r","\r","RandomUtils = class {\r","    constructor() {}\r","\r","    getUser() {\r","        return {\r","            name: pm.variables.replaceIn('{{$randomFullName}}'),\r","            email: pm.variables.replaceIn('{{$randomEmail}}')\r","        };\r","    }\r","\r","    getCategory() {\r","        return {\r","            name: pm.variables.replaceIn('{{$randomWord}}') + Math.floor(Math.random() * 10000 * Math.random()).toString()\r","        };\r","    }\r","\r","    getNote(){\r","        return {\r","            notes:pm.variables.replaceIn('{{$randomLoremParagraph}}')\r","        };\r","    }\r","\r","    getEvent(categoryId) {\r","        return {\r","            annotation: pm.variables.replaceIn('{{$randomLoremParagraph}}'),\r","            category: categoryId,\r","            description: pm.variables.replaceIn('{{$randomLoremParagraphs}}'),\r","            eventDate: this.getFutureDateTime(),\r","            location: {\r","                lat: parseFloat(pm.variables.replaceIn('{{$randomLatitude}}')),\r","                lon: parseFloat(pm.variables.replaceIn('{{$randomLongitude}}')),\r","            },\r","            paid: pm.variables.replaceIn('{{$randomBoolean}}'),\r","            participantLimit: pm.variables.replaceIn('{{$randomInt}}'),\r","            requestModeration: pm.variables.replaceIn('{{$randomBoolean}}'),\r","            title: pm.variables.replaceIn('{{$randomLoremSentence}}'),\r","        }\r","    }\r","\r","    getComment(length){\r","        return {\r","            content: pm.variables.replaceIn('{{$randomLoremSentence}}').slice(0, length)\r","        }\r","    }\r","\r","    getReport(reasonId){\r","        return {\r","            reasonId: reasonId,\r","            description: pm.variables.replaceIn('{{$randomLoremParagraph}}').slice(0, 50)\r","        }\r","    }\r","\r","    getCompilation(...eventIds) {\r","        return {\r","            title: pm.variables.replaceIn('{{$randomLoremSentence}}').slice(0, 50),\r","            pinned: pm.variables.replaceIn('{{$randomBoolean}}'),\r","            events: eventIds\r","        };\r","    }\r","\r","\r","    getFutureDateTime(hourShift = 5, minuteShift=0, yearShift=0) {\r","        let moment = require('moment');\r","\r","        let m = moment();\r","        m.add(hourShift, 'hour');\r","        m.add(minuteShift, 'minute');\r","        m.add(yearShift, 'year');\r","\r","        return m.format('YYYY-MM-DD HH:mm:ss');\r","    }\r","\r","    getWord(length = 1) {\r","        let result = '';\r","        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r","        const charactersLength = characters.length;\r","        let counter = 0;\r","        while (counter < length) {\r","            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r","            counter += 1;\r","        }\r","        return result;\r","    }\r","}"]}},{"listen":"test","script":{"id":"e1a01128-8660-4d53-8468-0742535ece0c","type":"text/javascript","packages":{},"exec":[""]}}],"variable":[{"key":"baseUrl","value":"http://localhost:8080","type":"string"},{"key":"eid","value":""},{"key":"response","value":""},{"key":"uid","value":"","type":"string"},{"key":"cid","value":"","type":"string"},{"key":"request_body","value":"","type":"string"},{"key":"comment","value":"","type":"string"},{"key":"comments_count","value":"1","type":"string"},{"key":"comments","value":""},{"key":"rid","value":""}]}}